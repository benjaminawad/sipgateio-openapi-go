/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeviceContingentsResponse struct for DeviceContingentsResponse
type DeviceContingentsResponse struct {
	Contingents []ContingentResponse `json:"contingents,omitempty"`
}

// NewDeviceContingentsResponse instantiates a new DeviceContingentsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceContingentsResponse() *DeviceContingentsResponse {
	this := DeviceContingentsResponse{}
	return &this
}

// NewDeviceContingentsResponseWithDefaults instantiates a new DeviceContingentsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceContingentsResponseWithDefaults() *DeviceContingentsResponse {
	this := DeviceContingentsResponse{}
	return &this
}

// GetContingents returns the Contingents field value if set, zero value otherwise.
func (o *DeviceContingentsResponse) GetContingents() []ContingentResponse {
	if o == nil || o.Contingents == nil {
		var ret []ContingentResponse
		return ret
	}
	return o.Contingents
}

// GetContingentsOk returns a tuple with the Contingents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceContingentsResponse) GetContingentsOk() ([]ContingentResponse, bool) {
	if o == nil || o.Contingents == nil {
		return nil, false
	}
	return o.Contingents, true
}

// HasContingents returns a boolean if a field has been set.
func (o *DeviceContingentsResponse) HasContingents() bool {
	if o != nil && o.Contingents != nil {
		return true
	}

	return false
}

// SetContingents gets a reference to the given []ContingentResponse and assigns it to the Contingents field.
func (o *DeviceContingentsResponse) SetContingents(v []ContingentResponse) {
	o.Contingents = v
}

func (o DeviceContingentsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Contingents != nil {
		toSerialize["contingents"] = o.Contingents
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceContingentsResponse struct {
	value *DeviceContingentsResponse
	isSet bool
}

func (v NullableDeviceContingentsResponse) Get() *DeviceContingentsResponse {
	return v.value
}

func (v *NullableDeviceContingentsResponse) Set(val *DeviceContingentsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceContingentsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceContingentsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceContingentsResponse(val *DeviceContingentsResponse) *NullableDeviceContingentsResponse {
	return &NullableDeviceContingentsResponse{value: val, isSet: true}
}

func (v NullableDeviceContingentsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceContingentsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


