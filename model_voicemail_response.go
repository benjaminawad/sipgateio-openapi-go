/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VoicemailResponse struct for VoicemailResponse
type VoicemailResponse struct {
	Id *string `json:"id,omitempty"`
	Alias *string `json:"alias,omitempty"`
	BelongsToEndpoint *EndpointResponse `json:"belongsToEndpoint,omitempty"`
	Transcription *bool `json:"transcription,omitempty"`
	CanTranscribe *bool `json:"canTranscribe,omitempty"`
	ActiveGreetingAlias *string `json:"activeGreetingAlias,omitempty"`
	ActiveGreetingId *string `json:"activeGreetingId,omitempty"`
	AccessNumber *string `json:"accessNumber,omitempty"`
}

// NewVoicemailResponse instantiates a new VoicemailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoicemailResponse() *VoicemailResponse {
	this := VoicemailResponse{}
	var transcription bool = false
	this.Transcription = &transcription
	var canTranscribe bool = false
	this.CanTranscribe = &canTranscribe
	return &this
}

// NewVoicemailResponseWithDefaults instantiates a new VoicemailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoicemailResponseWithDefaults() *VoicemailResponse {
	this := VoicemailResponse{}
	var transcription bool = false
	this.Transcription = &transcription
	var canTranscribe bool = false
	this.CanTranscribe = &canTranscribe
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VoicemailResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VoicemailResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VoicemailResponse) SetId(v string) {
	o.Id = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *VoicemailResponse) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *VoicemailResponse) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *VoicemailResponse) SetAlias(v string) {
	o.Alias = &v
}

// GetBelongsToEndpoint returns the BelongsToEndpoint field value if set, zero value otherwise.
func (o *VoicemailResponse) GetBelongsToEndpoint() EndpointResponse {
	if o == nil || o.BelongsToEndpoint == nil {
		var ret EndpointResponse
		return ret
	}
	return *o.BelongsToEndpoint
}

// GetBelongsToEndpointOk returns a tuple with the BelongsToEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetBelongsToEndpointOk() (*EndpointResponse, bool) {
	if o == nil || o.BelongsToEndpoint == nil {
		return nil, false
	}
	return o.BelongsToEndpoint, true
}

// HasBelongsToEndpoint returns a boolean if a field has been set.
func (o *VoicemailResponse) HasBelongsToEndpoint() bool {
	if o != nil && o.BelongsToEndpoint != nil {
		return true
	}

	return false
}

// SetBelongsToEndpoint gets a reference to the given EndpointResponse and assigns it to the BelongsToEndpoint field.
func (o *VoicemailResponse) SetBelongsToEndpoint(v EndpointResponse) {
	o.BelongsToEndpoint = &v
}

// GetTranscription returns the Transcription field value if set, zero value otherwise.
func (o *VoicemailResponse) GetTranscription() bool {
	if o == nil || o.Transcription == nil {
		var ret bool
		return ret
	}
	return *o.Transcription
}

// GetTranscriptionOk returns a tuple with the Transcription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetTranscriptionOk() (*bool, bool) {
	if o == nil || o.Transcription == nil {
		return nil, false
	}
	return o.Transcription, true
}

// HasTranscription returns a boolean if a field has been set.
func (o *VoicemailResponse) HasTranscription() bool {
	if o != nil && o.Transcription != nil {
		return true
	}

	return false
}

// SetTranscription gets a reference to the given bool and assigns it to the Transcription field.
func (o *VoicemailResponse) SetTranscription(v bool) {
	o.Transcription = &v
}

// GetCanTranscribe returns the CanTranscribe field value if set, zero value otherwise.
func (o *VoicemailResponse) GetCanTranscribe() bool {
	if o == nil || o.CanTranscribe == nil {
		var ret bool
		return ret
	}
	return *o.CanTranscribe
}

// GetCanTranscribeOk returns a tuple with the CanTranscribe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetCanTranscribeOk() (*bool, bool) {
	if o == nil || o.CanTranscribe == nil {
		return nil, false
	}
	return o.CanTranscribe, true
}

// HasCanTranscribe returns a boolean if a field has been set.
func (o *VoicemailResponse) HasCanTranscribe() bool {
	if o != nil && o.CanTranscribe != nil {
		return true
	}

	return false
}

// SetCanTranscribe gets a reference to the given bool and assigns it to the CanTranscribe field.
func (o *VoicemailResponse) SetCanTranscribe(v bool) {
	o.CanTranscribe = &v
}

// GetActiveGreetingAlias returns the ActiveGreetingAlias field value if set, zero value otherwise.
func (o *VoicemailResponse) GetActiveGreetingAlias() string {
	if o == nil || o.ActiveGreetingAlias == nil {
		var ret string
		return ret
	}
	return *o.ActiveGreetingAlias
}

// GetActiveGreetingAliasOk returns a tuple with the ActiveGreetingAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetActiveGreetingAliasOk() (*string, bool) {
	if o == nil || o.ActiveGreetingAlias == nil {
		return nil, false
	}
	return o.ActiveGreetingAlias, true
}

// HasActiveGreetingAlias returns a boolean if a field has been set.
func (o *VoicemailResponse) HasActiveGreetingAlias() bool {
	if o != nil && o.ActiveGreetingAlias != nil {
		return true
	}

	return false
}

// SetActiveGreetingAlias gets a reference to the given string and assigns it to the ActiveGreetingAlias field.
func (o *VoicemailResponse) SetActiveGreetingAlias(v string) {
	o.ActiveGreetingAlias = &v
}

// GetActiveGreetingId returns the ActiveGreetingId field value if set, zero value otherwise.
func (o *VoicemailResponse) GetActiveGreetingId() string {
	if o == nil || o.ActiveGreetingId == nil {
		var ret string
		return ret
	}
	return *o.ActiveGreetingId
}

// GetActiveGreetingIdOk returns a tuple with the ActiveGreetingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetActiveGreetingIdOk() (*string, bool) {
	if o == nil || o.ActiveGreetingId == nil {
		return nil, false
	}
	return o.ActiveGreetingId, true
}

// HasActiveGreetingId returns a boolean if a field has been set.
func (o *VoicemailResponse) HasActiveGreetingId() bool {
	if o != nil && o.ActiveGreetingId != nil {
		return true
	}

	return false
}

// SetActiveGreetingId gets a reference to the given string and assigns it to the ActiveGreetingId field.
func (o *VoicemailResponse) SetActiveGreetingId(v string) {
	o.ActiveGreetingId = &v
}

// GetAccessNumber returns the AccessNumber field value if set, zero value otherwise.
func (o *VoicemailResponse) GetAccessNumber() string {
	if o == nil || o.AccessNumber == nil {
		var ret string
		return ret
	}
	return *o.AccessNumber
}

// GetAccessNumberOk returns a tuple with the AccessNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoicemailResponse) GetAccessNumberOk() (*string, bool) {
	if o == nil || o.AccessNumber == nil {
		return nil, false
	}
	return o.AccessNumber, true
}

// HasAccessNumber returns a boolean if a field has been set.
func (o *VoicemailResponse) HasAccessNumber() bool {
	if o != nil && o.AccessNumber != nil {
		return true
	}

	return false
}

// SetAccessNumber gets a reference to the given string and assigns it to the AccessNumber field.
func (o *VoicemailResponse) SetAccessNumber(v string) {
	o.AccessNumber = &v
}

func (o VoicemailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.BelongsToEndpoint != nil {
		toSerialize["belongsToEndpoint"] = o.BelongsToEndpoint
	}
	if o.Transcription != nil {
		toSerialize["transcription"] = o.Transcription
	}
	if o.CanTranscribe != nil {
		toSerialize["canTranscribe"] = o.CanTranscribe
	}
	if o.ActiveGreetingAlias != nil {
		toSerialize["activeGreetingAlias"] = o.ActiveGreetingAlias
	}
	if o.ActiveGreetingId != nil {
		toSerialize["activeGreetingId"] = o.ActiveGreetingId
	}
	if o.AccessNumber != nil {
		toSerialize["accessNumber"] = o.AccessNumber
	}
	return json.Marshal(toSerialize)
}

type NullableVoicemailResponse struct {
	value *VoicemailResponse
	isSet bool
}

func (v NullableVoicemailResponse) Get() *VoicemailResponse {
	return v.value
}

func (v *NullableVoicemailResponse) Set(val *VoicemailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVoicemailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVoicemailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoicemailResponse(val *VoicemailResponse) *NullableVoicemailResponse {
	return &NullableVoicemailResponse{value: val, isSet: true}
}

func (v NullableVoicemailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoicemailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


