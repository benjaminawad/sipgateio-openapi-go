/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetSmsCallerIdRequest struct for SetSmsCallerIdRequest
type SetSmsCallerIdRequest struct {
	DefaultNumber *bool `json:"defaultNumber,omitempty"`
}

// NewSetSmsCallerIdRequest instantiates a new SetSmsCallerIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetSmsCallerIdRequest() *SetSmsCallerIdRequest {
	this := SetSmsCallerIdRequest{}
	var defaultNumber bool = false
	this.DefaultNumber = &defaultNumber
	return &this
}

// NewSetSmsCallerIdRequestWithDefaults instantiates a new SetSmsCallerIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetSmsCallerIdRequestWithDefaults() *SetSmsCallerIdRequest {
	this := SetSmsCallerIdRequest{}
	var defaultNumber bool = false
	this.DefaultNumber = &defaultNumber
	return &this
}

// GetDefaultNumber returns the DefaultNumber field value if set, zero value otherwise.
func (o *SetSmsCallerIdRequest) GetDefaultNumber() bool {
	if o == nil || o.DefaultNumber == nil {
		var ret bool
		return ret
	}
	return *o.DefaultNumber
}

// GetDefaultNumberOk returns a tuple with the DefaultNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetSmsCallerIdRequest) GetDefaultNumberOk() (*bool, bool) {
	if o == nil || o.DefaultNumber == nil {
		return nil, false
	}
	return o.DefaultNumber, true
}

// HasDefaultNumber returns a boolean if a field has been set.
func (o *SetSmsCallerIdRequest) HasDefaultNumber() bool {
	if o != nil && o.DefaultNumber != nil {
		return true
	}

	return false
}

// SetDefaultNumber gets a reference to the given bool and assigns it to the DefaultNumber field.
func (o *SetSmsCallerIdRequest) SetDefaultNumber(v bool) {
	o.DefaultNumber = &v
}

func (o SetSmsCallerIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultNumber != nil {
		toSerialize["defaultNumber"] = o.DefaultNumber
	}
	return json.Marshal(toSerialize)
}

type NullableSetSmsCallerIdRequest struct {
	value *SetSmsCallerIdRequest
	isSet bool
}

func (v NullableSetSmsCallerIdRequest) Get() *SetSmsCallerIdRequest {
	return v.value
}

func (v *NullableSetSmsCallerIdRequest) Set(val *SetSmsCallerIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetSmsCallerIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetSmsCallerIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetSmsCallerIdRequest(val *SetSmsCallerIdRequest) *NullableSetSmsCallerIdRequest {
	return &NullableSetSmsCallerIdRequest{value: val, isSet: true}
}

func (v NullableSetSmsCallerIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetSmsCallerIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


