/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChangeVoicemailTranscriptionRequest struct for ChangeVoicemailTranscriptionRequest
type ChangeVoicemailTranscriptionRequest struct {
	Active *bool `json:"active,omitempty"`
}

// NewChangeVoicemailTranscriptionRequest instantiates a new ChangeVoicemailTranscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeVoicemailTranscriptionRequest() *ChangeVoicemailTranscriptionRequest {
	this := ChangeVoicemailTranscriptionRequest{}
	var active bool = false
	this.Active = &active
	return &this
}

// NewChangeVoicemailTranscriptionRequestWithDefaults instantiates a new ChangeVoicemailTranscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeVoicemailTranscriptionRequestWithDefaults() *ChangeVoicemailTranscriptionRequest {
	this := ChangeVoicemailTranscriptionRequest{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ChangeVoicemailTranscriptionRequest) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeVoicemailTranscriptionRequest) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ChangeVoicemailTranscriptionRequest) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ChangeVoicemailTranscriptionRequest) SetActive(v bool) {
	o.Active = &v
}

func (o ChangeVoicemailTranscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	return json.Marshal(toSerialize)
}

type NullableChangeVoicemailTranscriptionRequest struct {
	value *ChangeVoicemailTranscriptionRequest
	isSet bool
}

func (v NullableChangeVoicemailTranscriptionRequest) Get() *ChangeVoicemailTranscriptionRequest {
	return v.value
}

func (v *NullableChangeVoicemailTranscriptionRequest) Set(val *ChangeVoicemailTranscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeVoicemailTranscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeVoicemailTranscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeVoicemailTranscriptionRequest(val *ChangeVoicemailTranscriptionRequest) *NullableChangeVoicemailTranscriptionRequest {
	return &NullableChangeVoicemailTranscriptionRequest{value: val, isSet: true}
}

func (v NullableChangeVoicemailTranscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeVoicemailTranscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


