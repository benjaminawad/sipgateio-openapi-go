/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Participant struct for Participant
type Participant struct {
	// The unique participant identifier
	ParticipantId string `json:"participantId"`
	// Participants phone number (can be empty for various reasons, e.g. anonymous participant)
	PhoneNumber string `json:"phoneNumber"`
	// Participant is muted
	Muted bool `json:"muted"`
	// Participant is on hold
	Hold bool `json:"hold"`
	// Participant is the call owner
	Owner bool `json:"owner"`
}

// NewParticipant instantiates a new Participant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipant(participantId string, phoneNumber string, muted bool, hold bool, owner bool) *Participant {
	this := Participant{}
	this.ParticipantId = participantId
	this.PhoneNumber = phoneNumber
	this.Muted = muted
	this.Hold = hold
	this.Owner = owner
	return &this
}

// NewParticipantWithDefaults instantiates a new Participant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipantWithDefaults() *Participant {
	this := Participant{}
	return &this
}

// GetParticipantId returns the ParticipantId field value
func (o *Participant) GetParticipantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParticipantId
}

// GetParticipantIdOk returns a tuple with the ParticipantId field value
// and a boolean to check if the value has been set.
func (o *Participant) GetParticipantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParticipantId, true
}

// SetParticipantId sets field value
func (o *Participant) SetParticipantId(v string) {
	o.ParticipantId = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *Participant) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *Participant) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *Participant) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetMuted returns the Muted field value
func (o *Participant) GetMuted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Muted
}

// GetMutedOk returns a tuple with the Muted field value
// and a boolean to check if the value has been set.
func (o *Participant) GetMutedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Muted, true
}

// SetMuted sets field value
func (o *Participant) SetMuted(v bool) {
	o.Muted = v
}

// GetHold returns the Hold field value
func (o *Participant) GetHold() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hold
}

// GetHoldOk returns a tuple with the Hold field value
// and a boolean to check if the value has been set.
func (o *Participant) GetHoldOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hold, true
}

// SetHold sets field value
func (o *Participant) SetHold(v bool) {
	o.Hold = v
}

// GetOwner returns the Owner field value
func (o *Participant) GetOwner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *Participant) GetOwnerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *Participant) SetOwner(v bool) {
	o.Owner = v
}

func (o Participant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["participantId"] = o.ParticipantId
	}
	if true {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if true {
		toSerialize["muted"] = o.Muted
	}
	if true {
		toSerialize["hold"] = o.Hold
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	return json.Marshal(toSerialize)
}

type NullableParticipant struct {
	value *Participant
	isSet bool
}

func (v NullableParticipant) Get() *Participant {
	return v.value
}

func (v *NullableParticipant) Set(val *Participant) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipant) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipant(val *Participant) *NullableParticipant {
	return &NullableParticipant{value: val, isSet: true}
}

func (v NullableParticipant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


