/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HistoryEntryResponse struct for HistoryEntryResponse
type HistoryEntryResponse struct {
	Id *string `json:"id,omitempty"`
	Source *string `json:"source,omitempty"`
	Target *string `json:"target,omitempty"`
	SourceAlias *string `json:"sourceAlias,omitempty"`
	TargetAlias *string `json:"targetAlias,omitempty"`
	Type *string `json:"type,omitempty"`
	Created *string `json:"created,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Incoming *bool `json:"incoming,omitempty"`
	Status *string `json:"status,omitempty"`
	ConnectionIds []string `json:"connectionIds,omitempty"`
	Read *bool `json:"read,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	Note *string `json:"note,omitempty"`
	Endpoints []RoutedEndpointResponse `json:"endpoints,omitempty"`
	Starred *bool `json:"starred,omitempty"`
	Labels []string `json:"labels,omitempty"`
}

// NewHistoryEntryResponse instantiates a new HistoryEntryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoryEntryResponse() *HistoryEntryResponse {
	this := HistoryEntryResponse{}
	var incoming bool = false
	this.Incoming = &incoming
	var read bool = false
	this.Read = &read
	var archived bool = false
	this.Archived = &archived
	var starred bool = false
	this.Starred = &starred
	return &this
}

// NewHistoryEntryResponseWithDefaults instantiates a new HistoryEntryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoryEntryResponseWithDefaults() *HistoryEntryResponse {
	this := HistoryEntryResponse{}
	var incoming bool = false
	this.Incoming = &incoming
	var read bool = false
	this.Read = &read
	var archived bool = false
	this.Archived = &archived
	var starred bool = false
	this.Starred = &starred
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HistoryEntryResponse) SetId(v string) {
	o.Id = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *HistoryEntryResponse) SetSource(v string) {
	o.Source = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *HistoryEntryResponse) SetTarget(v string) {
	o.Target = &v
}

// GetSourceAlias returns the SourceAlias field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetSourceAlias() string {
	if o == nil || o.SourceAlias == nil {
		var ret string
		return ret
	}
	return *o.SourceAlias
}

// GetSourceAliasOk returns a tuple with the SourceAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetSourceAliasOk() (*string, bool) {
	if o == nil || o.SourceAlias == nil {
		return nil, false
	}
	return o.SourceAlias, true
}

// HasSourceAlias returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasSourceAlias() bool {
	if o != nil && o.SourceAlias != nil {
		return true
	}

	return false
}

// SetSourceAlias gets a reference to the given string and assigns it to the SourceAlias field.
func (o *HistoryEntryResponse) SetSourceAlias(v string) {
	o.SourceAlias = &v
}

// GetTargetAlias returns the TargetAlias field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetTargetAlias() string {
	if o == nil || o.TargetAlias == nil {
		var ret string
		return ret
	}
	return *o.TargetAlias
}

// GetTargetAliasOk returns a tuple with the TargetAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetTargetAliasOk() (*string, bool) {
	if o == nil || o.TargetAlias == nil {
		return nil, false
	}
	return o.TargetAlias, true
}

// HasTargetAlias returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasTargetAlias() bool {
	if o != nil && o.TargetAlias != nil {
		return true
	}

	return false
}

// SetTargetAlias gets a reference to the given string and assigns it to the TargetAlias field.
func (o *HistoryEntryResponse) SetTargetAlias(v string) {
	o.TargetAlias = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *HistoryEntryResponse) SetType(v string) {
	o.Type = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *HistoryEntryResponse) SetCreated(v string) {
	o.Created = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetLastModified() string {
	if o == nil || o.LastModified == nil {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetLastModifiedOk() (*string, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *HistoryEntryResponse) SetLastModified(v string) {
	o.LastModified = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *HistoryEntryResponse) SetDirection(v string) {
	o.Direction = &v
}

// GetIncoming returns the Incoming field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetIncoming() bool {
	if o == nil || o.Incoming == nil {
		var ret bool
		return ret
	}
	return *o.Incoming
}

// GetIncomingOk returns a tuple with the Incoming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetIncomingOk() (*bool, bool) {
	if o == nil || o.Incoming == nil {
		return nil, false
	}
	return o.Incoming, true
}

// HasIncoming returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasIncoming() bool {
	if o != nil && o.Incoming != nil {
		return true
	}

	return false
}

// SetIncoming gets a reference to the given bool and assigns it to the Incoming field.
func (o *HistoryEntryResponse) SetIncoming(v bool) {
	o.Incoming = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HistoryEntryResponse) SetStatus(v string) {
	o.Status = &v
}

// GetConnectionIds returns the ConnectionIds field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetConnectionIds() []string {
	if o == nil || o.ConnectionIds == nil {
		var ret []string
		return ret
	}
	return o.ConnectionIds
}

// GetConnectionIdsOk returns a tuple with the ConnectionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetConnectionIdsOk() ([]string, bool) {
	if o == nil || o.ConnectionIds == nil {
		return nil, false
	}
	return o.ConnectionIds, true
}

// HasConnectionIds returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasConnectionIds() bool {
	if o != nil && o.ConnectionIds != nil {
		return true
	}

	return false
}

// SetConnectionIds gets a reference to the given []string and assigns it to the ConnectionIds field.
func (o *HistoryEntryResponse) SetConnectionIds(v []string) {
	o.ConnectionIds = v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetRead() bool {
	if o == nil || o.Read == nil {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetReadOk() (*bool, bool) {
	if o == nil || o.Read == nil {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasRead() bool {
	if o != nil && o.Read != nil {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *HistoryEntryResponse) SetRead(v bool) {
	o.Read = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *HistoryEntryResponse) SetArchived(v bool) {
	o.Archived = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetNote() string {
	if o == nil || o.Note == nil {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetNoteOk() (*string, bool) {
	if o == nil || o.Note == nil {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasNote() bool {
	if o != nil && o.Note != nil {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *HistoryEntryResponse) SetNote(v string) {
	o.Note = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetEndpoints() []RoutedEndpointResponse {
	if o == nil || o.Endpoints == nil {
		var ret []RoutedEndpointResponse
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetEndpointsOk() ([]RoutedEndpointResponse, bool) {
	if o == nil || o.Endpoints == nil {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasEndpoints() bool {
	if o != nil && o.Endpoints != nil {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []RoutedEndpointResponse and assigns it to the Endpoints field.
func (o *HistoryEntryResponse) SetEndpoints(v []RoutedEndpointResponse) {
	o.Endpoints = v
}

// GetStarred returns the Starred field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetStarred() bool {
	if o == nil || o.Starred == nil {
		var ret bool
		return ret
	}
	return *o.Starred
}

// GetStarredOk returns a tuple with the Starred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetStarredOk() (*bool, bool) {
	if o == nil || o.Starred == nil {
		return nil, false
	}
	return o.Starred, true
}

// HasStarred returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasStarred() bool {
	if o != nil && o.Starred != nil {
		return true
	}

	return false
}

// SetStarred gets a reference to the given bool and assigns it to the Starred field.
func (o *HistoryEntryResponse) SetStarred(v bool) {
	o.Starred = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *HistoryEntryResponse) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HistoryEntryResponse) GetLabelsOk() ([]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *HistoryEntryResponse) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *HistoryEntryResponse) SetLabels(v []string) {
	o.Labels = v
}

func (o HistoryEntryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.SourceAlias != nil {
		toSerialize["sourceAlias"] = o.SourceAlias
	}
	if o.TargetAlias != nil {
		toSerialize["targetAlias"] = o.TargetAlias
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Incoming != nil {
		toSerialize["incoming"] = o.Incoming
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ConnectionIds != nil {
		toSerialize["connectionIds"] = o.ConnectionIds
	}
	if o.Read != nil {
		toSerialize["read"] = o.Read
	}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.Note != nil {
		toSerialize["note"] = o.Note
	}
	if o.Endpoints != nil {
		toSerialize["endpoints"] = o.Endpoints
	}
	if o.Starred != nil {
		toSerialize["starred"] = o.Starred
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableHistoryEntryResponse struct {
	value *HistoryEntryResponse
	isSet bool
}

func (v NullableHistoryEntryResponse) Get() *HistoryEntryResponse {
	return v.value
}

func (v *NullableHistoryEntryResponse) Set(val *HistoryEntryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoryEntryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoryEntryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoryEntryResponse(val *HistoryEntryResponse) *NullableHistoryEntryResponse {
	return &NullableHistoryEntryResponse{value: val, isSet: true}
}

func (v NullableHistoryEntryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoryEntryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


