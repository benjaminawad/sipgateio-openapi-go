/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SmsNotificationResponse struct for SmsNotificationResponse
type SmsNotificationResponse struct {
	EndpointId *string `json:"endpointId,omitempty"`
	EndpointAlias *string `json:"endpointAlias,omitempty"`
	Emails []SmsEmailTarget `json:"emails,omitempty"`
}

// NewSmsNotificationResponse instantiates a new SmsNotificationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsNotificationResponse() *SmsNotificationResponse {
	this := SmsNotificationResponse{}
	return &this
}

// NewSmsNotificationResponseWithDefaults instantiates a new SmsNotificationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsNotificationResponseWithDefaults() *SmsNotificationResponse {
	this := SmsNotificationResponse{}
	return &this
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *SmsNotificationResponse) GetEndpointId() string {
	if o == nil || o.EndpointId == nil {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationResponse) GetEndpointIdOk() (*string, bool) {
	if o == nil || o.EndpointId == nil {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *SmsNotificationResponse) HasEndpointId() bool {
	if o != nil && o.EndpointId != nil {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *SmsNotificationResponse) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetEndpointAlias returns the EndpointAlias field value if set, zero value otherwise.
func (o *SmsNotificationResponse) GetEndpointAlias() string {
	if o == nil || o.EndpointAlias == nil {
		var ret string
		return ret
	}
	return *o.EndpointAlias
}

// GetEndpointAliasOk returns a tuple with the EndpointAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationResponse) GetEndpointAliasOk() (*string, bool) {
	if o == nil || o.EndpointAlias == nil {
		return nil, false
	}
	return o.EndpointAlias, true
}

// HasEndpointAlias returns a boolean if a field has been set.
func (o *SmsNotificationResponse) HasEndpointAlias() bool {
	if o != nil && o.EndpointAlias != nil {
		return true
	}

	return false
}

// SetEndpointAlias gets a reference to the given string and assigns it to the EndpointAlias field.
func (o *SmsNotificationResponse) SetEndpointAlias(v string) {
	o.EndpointAlias = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *SmsNotificationResponse) GetEmails() []SmsEmailTarget {
	if o == nil || o.Emails == nil {
		var ret []SmsEmailTarget
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationResponse) GetEmailsOk() ([]SmsEmailTarget, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *SmsNotificationResponse) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []SmsEmailTarget and assigns it to the Emails field.
func (o *SmsNotificationResponse) SetEmails(v []SmsEmailTarget) {
	o.Emails = v
}

func (o SmsNotificationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndpointId != nil {
		toSerialize["endpointId"] = o.EndpointId
	}
	if o.EndpointAlias != nil {
		toSerialize["endpointAlias"] = o.EndpointAlias
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	return json.Marshal(toSerialize)
}

type NullableSmsNotificationResponse struct {
	value *SmsNotificationResponse
	isSet bool
}

func (v NullableSmsNotificationResponse) Get() *SmsNotificationResponse {
	return v.value
}

func (v *NullableSmsNotificationResponse) Set(val *SmsNotificationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsNotificationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsNotificationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsNotificationResponse(val *SmsNotificationResponse) *NullableSmsNotificationResponse {
	return &NullableSmsNotificationResponse{value: val, isSet: true}
}

func (v NullableSmsNotificationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsNotificationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


