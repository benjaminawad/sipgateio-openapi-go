/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetDefaultDeviceRequest struct for SetDefaultDeviceRequest
type SetDefaultDeviceRequest struct {
	DeviceId string `json:"deviceId"`
}

// NewSetDefaultDeviceRequest instantiates a new SetDefaultDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDefaultDeviceRequest(deviceId string) *SetDefaultDeviceRequest {
	this := SetDefaultDeviceRequest{}
	this.DeviceId = deviceId
	return &this
}

// NewSetDefaultDeviceRequestWithDefaults instantiates a new SetDefaultDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDefaultDeviceRequestWithDefaults() *SetDefaultDeviceRequest {
	this := SetDefaultDeviceRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *SetDefaultDeviceRequest) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *SetDefaultDeviceRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *SetDefaultDeviceRequest) SetDeviceId(v string) {
	o.DeviceId = v
}

func (o SetDefaultDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deviceId"] = o.DeviceId
	}
	return json.Marshal(toSerialize)
}

type NullableSetDefaultDeviceRequest struct {
	value *SetDefaultDeviceRequest
	isSet bool
}

func (v NullableSetDefaultDeviceRequest) Get() *SetDefaultDeviceRequest {
	return v.value
}

func (v *NullableSetDefaultDeviceRequest) Set(val *SetDefaultDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDefaultDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDefaultDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDefaultDeviceRequest(val *SetDefaultDeviceRequest) *NullableSetDefaultDeviceRequest {
	return &NullableSetDefaultDeviceRequest{value: val, isSet: true}
}

func (v NullableSetDefaultDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDefaultDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


