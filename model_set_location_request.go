/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetLocationRequest struct for SetLocationRequest
type SetLocationRequest struct {
	AddressId *int32 `json:"addressId,omitempty"`
}

// NewSetLocationRequest instantiates a new SetLocationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetLocationRequest() *SetLocationRequest {
	this := SetLocationRequest{}
	return &this
}

// NewSetLocationRequestWithDefaults instantiates a new SetLocationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetLocationRequestWithDefaults() *SetLocationRequest {
	this := SetLocationRequest{}
	return &this
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *SetLocationRequest) GetAddressId() int32 {
	if o == nil || o.AddressId == nil {
		var ret int32
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetLocationRequest) GetAddressIdOk() (*int32, bool) {
	if o == nil || o.AddressId == nil {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *SetLocationRequest) HasAddressId() bool {
	if o != nil && o.AddressId != nil {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given int32 and assigns it to the AddressId field.
func (o *SetLocationRequest) SetAddressId(v int32) {
	o.AddressId = &v
}

func (o SetLocationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AddressId != nil {
		toSerialize["addressId"] = o.AddressId
	}
	return json.Marshal(toSerialize)
}

type NullableSetLocationRequest struct {
	value *SetLocationRequest
	isSet bool
}

func (v NullableSetLocationRequest) Get() *SetLocationRequest {
	return v.value
}

func (v *NullableSetLocationRequest) Set(val *SetLocationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetLocationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetLocationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetLocationRequest(val *SetLocationRequest) *NullableSetLocationRequest {
	return &NullableSetLocationRequest{value: val, isSet: true}
}

func (v NullableSetLocationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetLocationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


