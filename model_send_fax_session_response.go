/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SendFaxSessionResponse struct for SendFaxSessionResponse
type SendFaxSessionResponse struct {
	SessionId *string `json:"sessionId,omitempty"`
}

// NewSendFaxSessionResponse instantiates a new SendFaxSessionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendFaxSessionResponse() *SendFaxSessionResponse {
	this := SendFaxSessionResponse{}
	return &this
}

// NewSendFaxSessionResponseWithDefaults instantiates a new SendFaxSessionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendFaxSessionResponseWithDefaults() *SendFaxSessionResponse {
	this := SendFaxSessionResponse{}
	return &this
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *SendFaxSessionResponse) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendFaxSessionResponse) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *SendFaxSessionResponse) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *SendFaxSessionResponse) SetSessionId(v string) {
	o.SessionId = &v
}

func (o SendFaxSessionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SessionId != nil {
		toSerialize["sessionId"] = o.SessionId
	}
	return json.Marshal(toSerialize)
}

type NullableSendFaxSessionResponse struct {
	value *SendFaxSessionResponse
	isSet bool
}

func (v NullableSendFaxSessionResponse) Get() *SendFaxSessionResponse {
	return v.value
}

func (v *NullableSendFaxSessionResponse) Set(val *SendFaxSessionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSendFaxSessionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSendFaxSessionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendFaxSessionResponse(val *SendFaxSessionResponse) *NullableSendFaxSessionResponse {
	return &NullableSendFaxSessionResponse{value: val, isSet: true}
}

func (v NullableSendFaxSessionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendFaxSessionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


