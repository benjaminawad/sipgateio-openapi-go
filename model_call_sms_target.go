/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CallSmsTarget struct for CallSmsTarget
type CallSmsTarget struct {
	Id *string `json:"id,omitempty"`
	Number *string `json:"number,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Cause *string `json:"cause,omitempty"`
}

// NewCallSmsTarget instantiates a new CallSmsTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallSmsTarget() *CallSmsTarget {
	this := CallSmsTarget{}
	return &this
}

// NewCallSmsTargetWithDefaults instantiates a new CallSmsTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallSmsTargetWithDefaults() *CallSmsTarget {
	this := CallSmsTarget{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CallSmsTarget) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallSmsTarget) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CallSmsTarget) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CallSmsTarget) SetId(v string) {
	o.Id = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *CallSmsTarget) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallSmsTarget) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *CallSmsTarget) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *CallSmsTarget) SetNumber(v string) {
	o.Number = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *CallSmsTarget) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallSmsTarget) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *CallSmsTarget) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *CallSmsTarget) SetDirection(v string) {
	o.Direction = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *CallSmsTarget) GetCause() string {
	if o == nil || o.Cause == nil {
		var ret string
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallSmsTarget) GetCauseOk() (*string, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *CallSmsTarget) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given string and assigns it to the Cause field.
func (o *CallSmsTarget) SetCause(v string) {
	o.Cause = &v
}

func (o CallSmsTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	return json.Marshal(toSerialize)
}

type NullableCallSmsTarget struct {
	value *CallSmsTarget
	isSet bool
}

func (v NullableCallSmsTarget) Get() *CallSmsTarget {
	return v.value
}

func (v *NullableCallSmsTarget) Set(val *CallSmsTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCallSmsTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCallSmsTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallSmsTarget(val *CallSmsTarget) *NullableCallSmsTarget {
	return &NullableCallSmsTarget{value: val, isSet: true}
}

func (v NullableCallSmsTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallSmsTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


