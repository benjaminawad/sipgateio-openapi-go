/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RecordingRequest struct for RecordingRequest
type RecordingRequest struct {
	// Announce recording start/stop to all participants
	Announcement bool `json:"announcement"`
	// Start/stop the recording
	Value bool `json:"value"`
}

// NewRecordingRequest instantiates a new RecordingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordingRequest(announcement bool, value bool) *RecordingRequest {
	this := RecordingRequest{}
	this.Announcement = announcement
	this.Value = value
	return &this
}

// NewRecordingRequestWithDefaults instantiates a new RecordingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordingRequestWithDefaults() *RecordingRequest {
	this := RecordingRequest{}
	return &this
}

// GetAnnouncement returns the Announcement field value
func (o *RecordingRequest) GetAnnouncement() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Announcement
}

// GetAnnouncementOk returns a tuple with the Announcement field value
// and a boolean to check if the value has been set.
func (o *RecordingRequest) GetAnnouncementOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Announcement, true
}

// SetAnnouncement sets field value
func (o *RecordingRequest) SetAnnouncement(v bool) {
	o.Announcement = v
}

// GetValue returns the Value field value
func (o *RecordingRequest) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *RecordingRequest) GetValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *RecordingRequest) SetValue(v bool) {
	o.Value = v
}

func (o RecordingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["announcement"] = o.Announcement
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableRecordingRequest struct {
	value *RecordingRequest
	isSet bool
}

func (v NullableRecordingRequest) Get() *RecordingRequest {
	return v.value
}

func (v *NullableRecordingRequest) Set(val *RecordingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordingRequest(val *RecordingRequest) *NullableRecordingRequest {
	return &NullableRecordingRequest{value: val, isSet: true}
}

func (v NullableRecordingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


