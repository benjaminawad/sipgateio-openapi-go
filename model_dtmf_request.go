/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DtmfRequest struct for DtmfRequest
type DtmfRequest struct {
	// DTMF sequence to send
	Sequence string `json:"sequence"`
}

// NewDtmfRequest instantiates a new DtmfRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtmfRequest(sequence string) *DtmfRequest {
	this := DtmfRequest{}
	this.Sequence = sequence
	return &this
}

// NewDtmfRequestWithDefaults instantiates a new DtmfRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtmfRequestWithDefaults() *DtmfRequest {
	this := DtmfRequest{}
	return &this
}

// GetSequence returns the Sequence field value
func (o *DtmfRequest) GetSequence() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value
// and a boolean to check if the value has been set.
func (o *DtmfRequest) GetSequenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sequence, true
}

// SetSequence sets field value
func (o *DtmfRequest) SetSequence(v string) {
	o.Sequence = v
}

func (o DtmfRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sequence"] = o.Sequence
	}
	return json.Marshal(toSerialize)
}

type NullableDtmfRequest struct {
	value *DtmfRequest
	isSet bool
}

func (v NullableDtmfRequest) Get() *DtmfRequest {
	return v.value
}

func (v *NullableDtmfRequest) Set(val *DtmfRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDtmfRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDtmfRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtmfRequest(val *DtmfRequest) *NullableDtmfRequest {
	return &NullableDtmfRequest{value: val, isSet: true}
}

func (v NullableDtmfRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtmfRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


