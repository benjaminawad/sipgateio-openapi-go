/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SipgateIoUrlResponse struct for SipgateIoUrlResponse
type SipgateIoUrlResponse struct {
	IncomingUrl *string `json:"incomingUrl,omitempty"`
	OutgoingUrl *string `json:"outgoingUrl,omitempty"`
	Log *bool `json:"log,omitempty"`
	Whitelist []string `json:"whitelist,omitempty"`
}

// NewSipgateIoUrlResponse instantiates a new SipgateIoUrlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSipgateIoUrlResponse() *SipgateIoUrlResponse {
	this := SipgateIoUrlResponse{}
	var log bool = false
	this.Log = &log
	return &this
}

// NewSipgateIoUrlResponseWithDefaults instantiates a new SipgateIoUrlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSipgateIoUrlResponseWithDefaults() *SipgateIoUrlResponse {
	this := SipgateIoUrlResponse{}
	var log bool = false
	this.Log = &log
	return &this
}

// GetIncomingUrl returns the IncomingUrl field value if set, zero value otherwise.
func (o *SipgateIoUrlResponse) GetIncomingUrl() string {
	if o == nil || o.IncomingUrl == nil {
		var ret string
		return ret
	}
	return *o.IncomingUrl
}

// GetIncomingUrlOk returns a tuple with the IncomingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SipgateIoUrlResponse) GetIncomingUrlOk() (*string, bool) {
	if o == nil || o.IncomingUrl == nil {
		return nil, false
	}
	return o.IncomingUrl, true
}

// HasIncomingUrl returns a boolean if a field has been set.
func (o *SipgateIoUrlResponse) HasIncomingUrl() bool {
	if o != nil && o.IncomingUrl != nil {
		return true
	}

	return false
}

// SetIncomingUrl gets a reference to the given string and assigns it to the IncomingUrl field.
func (o *SipgateIoUrlResponse) SetIncomingUrl(v string) {
	o.IncomingUrl = &v
}

// GetOutgoingUrl returns the OutgoingUrl field value if set, zero value otherwise.
func (o *SipgateIoUrlResponse) GetOutgoingUrl() string {
	if o == nil || o.OutgoingUrl == nil {
		var ret string
		return ret
	}
	return *o.OutgoingUrl
}

// GetOutgoingUrlOk returns a tuple with the OutgoingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SipgateIoUrlResponse) GetOutgoingUrlOk() (*string, bool) {
	if o == nil || o.OutgoingUrl == nil {
		return nil, false
	}
	return o.OutgoingUrl, true
}

// HasOutgoingUrl returns a boolean if a field has been set.
func (o *SipgateIoUrlResponse) HasOutgoingUrl() bool {
	if o != nil && o.OutgoingUrl != nil {
		return true
	}

	return false
}

// SetOutgoingUrl gets a reference to the given string and assigns it to the OutgoingUrl field.
func (o *SipgateIoUrlResponse) SetOutgoingUrl(v string) {
	o.OutgoingUrl = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *SipgateIoUrlResponse) GetLog() bool {
	if o == nil || o.Log == nil {
		var ret bool
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SipgateIoUrlResponse) GetLogOk() (*bool, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *SipgateIoUrlResponse) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given bool and assigns it to the Log field.
func (o *SipgateIoUrlResponse) SetLog(v bool) {
	o.Log = &v
}

// GetWhitelist returns the Whitelist field value if set, zero value otherwise.
func (o *SipgateIoUrlResponse) GetWhitelist() []string {
	if o == nil || o.Whitelist == nil {
		var ret []string
		return ret
	}
	return o.Whitelist
}

// GetWhitelistOk returns a tuple with the Whitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SipgateIoUrlResponse) GetWhitelistOk() ([]string, bool) {
	if o == nil || o.Whitelist == nil {
		return nil, false
	}
	return o.Whitelist, true
}

// HasWhitelist returns a boolean if a field has been set.
func (o *SipgateIoUrlResponse) HasWhitelist() bool {
	if o != nil && o.Whitelist != nil {
		return true
	}

	return false
}

// SetWhitelist gets a reference to the given []string and assigns it to the Whitelist field.
func (o *SipgateIoUrlResponse) SetWhitelist(v []string) {
	o.Whitelist = v
}

func (o SipgateIoUrlResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncomingUrl != nil {
		toSerialize["incomingUrl"] = o.IncomingUrl
	}
	if o.OutgoingUrl != nil {
		toSerialize["outgoingUrl"] = o.OutgoingUrl
	}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	if o.Whitelist != nil {
		toSerialize["whitelist"] = o.Whitelist
	}
	return json.Marshal(toSerialize)
}

type NullableSipgateIoUrlResponse struct {
	value *SipgateIoUrlResponse
	isSet bool
}

func (v NullableSipgateIoUrlResponse) Get() *SipgateIoUrlResponse {
	return v.value
}

func (v *NullableSipgateIoUrlResponse) Set(val *SipgateIoUrlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSipgateIoUrlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSipgateIoUrlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSipgateIoUrlResponse(val *SipgateIoUrlResponse) *NullableSipgateIoUrlResponse {
	return &NullableSipgateIoUrlResponse{value: val, isSet: true}
}

func (v NullableSipgateIoUrlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSipgateIoUrlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


