/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NewCallRequest struct for NewCallRequest
type NewCallRequest struct {
	DeviceId *string `json:"deviceId,omitempty"`
	Caller string `json:"caller"`
	Callee string `json:"callee"`
	CallerId *string `json:"callerId,omitempty"`
}

// NewNewCallRequest instantiates a new NewCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewCallRequest(caller string, callee string) *NewCallRequest {
	this := NewCallRequest{}
	this.Caller = caller
	this.Callee = callee
	return &this
}

// NewNewCallRequestWithDefaults instantiates a new NewCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewCallRequestWithDefaults() *NewCallRequest {
	this := NewCallRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *NewCallRequest) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewCallRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *NewCallRequest) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *NewCallRequest) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetCaller returns the Caller field value
func (o *NewCallRequest) GetCaller() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Caller
}

// GetCallerOk returns a tuple with the Caller field value
// and a boolean to check if the value has been set.
func (o *NewCallRequest) GetCallerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Caller, true
}

// SetCaller sets field value
func (o *NewCallRequest) SetCaller(v string) {
	o.Caller = v
}

// GetCallee returns the Callee field value
func (o *NewCallRequest) GetCallee() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Callee
}

// GetCalleeOk returns a tuple with the Callee field value
// and a boolean to check if the value has been set.
func (o *NewCallRequest) GetCalleeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Callee, true
}

// SetCallee sets field value
func (o *NewCallRequest) SetCallee(v string) {
	o.Callee = v
}

// GetCallerId returns the CallerId field value if set, zero value otherwise.
func (o *NewCallRequest) GetCallerId() string {
	if o == nil || o.CallerId == nil {
		var ret string
		return ret
	}
	return *o.CallerId
}

// GetCallerIdOk returns a tuple with the CallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewCallRequest) GetCallerIdOk() (*string, bool) {
	if o == nil || o.CallerId == nil {
		return nil, false
	}
	return o.CallerId, true
}

// HasCallerId returns a boolean if a field has been set.
func (o *NewCallRequest) HasCallerId() bool {
	if o != nil && o.CallerId != nil {
		return true
	}

	return false
}

// SetCallerId gets a reference to the given string and assigns it to the CallerId field.
func (o *NewCallRequest) SetCallerId(v string) {
	o.CallerId = &v
}

func (o NewCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if true {
		toSerialize["caller"] = o.Caller
	}
	if true {
		toSerialize["callee"] = o.Callee
	}
	if o.CallerId != nil {
		toSerialize["callerId"] = o.CallerId
	}
	return json.Marshal(toSerialize)
}

type NullableNewCallRequest struct {
	value *NewCallRequest
	isSet bool
}

func (v NullableNewCallRequest) Get() *NewCallRequest {
	return v.value
}

func (v *NullableNewCallRequest) Set(val *NewCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewCallRequest(val *NewCallRequest) *NullableNewCallRequest {
	return &NullableNewCallRequest{value: val, isSet: true}
}

func (v NullableNewCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


