/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SendFaxRequest struct for SendFaxRequest
type SendFaxRequest struct {
	FaxlineId string `json:"faxlineId"`
	Recipient string `json:"recipient"`
	Filename string `json:"filename"`
	Base64Content string `json:"base64Content"`
}

// NewSendFaxRequest instantiates a new SendFaxRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendFaxRequest(faxlineId string, recipient string, filename string, base64Content string) *SendFaxRequest {
	this := SendFaxRequest{}
	this.FaxlineId = faxlineId
	this.Recipient = recipient
	this.Filename = filename
	this.Base64Content = base64Content
	return &this
}

// NewSendFaxRequestWithDefaults instantiates a new SendFaxRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendFaxRequestWithDefaults() *SendFaxRequest {
	this := SendFaxRequest{}
	return &this
}

// GetFaxlineId returns the FaxlineId field value
func (o *SendFaxRequest) GetFaxlineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FaxlineId
}

// GetFaxlineIdOk returns a tuple with the FaxlineId field value
// and a boolean to check if the value has been set.
func (o *SendFaxRequest) GetFaxlineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FaxlineId, true
}

// SetFaxlineId sets field value
func (o *SendFaxRequest) SetFaxlineId(v string) {
	o.FaxlineId = v
}

// GetRecipient returns the Recipient field value
func (o *SendFaxRequest) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *SendFaxRequest) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *SendFaxRequest) SetRecipient(v string) {
	o.Recipient = v
}

// GetFilename returns the Filename field value
func (o *SendFaxRequest) GetFilename() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value
// and a boolean to check if the value has been set.
func (o *SendFaxRequest) GetFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filename, true
}

// SetFilename sets field value
func (o *SendFaxRequest) SetFilename(v string) {
	o.Filename = v
}

// GetBase64Content returns the Base64Content field value
func (o *SendFaxRequest) GetBase64Content() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Base64Content
}

// GetBase64ContentOk returns a tuple with the Base64Content field value
// and a boolean to check if the value has been set.
func (o *SendFaxRequest) GetBase64ContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base64Content, true
}

// SetBase64Content sets field value
func (o *SendFaxRequest) SetBase64Content(v string) {
	o.Base64Content = v
}

func (o SendFaxRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["faxlineId"] = o.FaxlineId
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["filename"] = o.Filename
	}
	if true {
		toSerialize["base64Content"] = o.Base64Content
	}
	return json.Marshal(toSerialize)
}

type NullableSendFaxRequest struct {
	value *SendFaxRequest
	isSet bool
}

func (v NullableSendFaxRequest) Get() *SendFaxRequest {
	return v.value
}

func (v *NullableSendFaxRequest) Set(val *SendFaxRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendFaxRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendFaxRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendFaxRequest(val *SendFaxRequest) *NullableSendFaxRequest {
	return &NullableSendFaxRequest{value: val, isSet: true}
}

func (v NullableSendFaxRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendFaxRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


