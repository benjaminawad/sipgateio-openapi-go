/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountResponse struct for AccountResponse
type AccountResponse struct {
	Company *string `json:"company,omitempty"`
	MainProductType *string `json:"mainProductType,omitempty"`
	LogoUrl *string `json:"logoUrl,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	HistoryLifeTime *string `json:"historyLifeTime,omitempty"`
}

// NewAccountResponse instantiates a new AccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountResponse() *AccountResponse {
	this := AccountResponse{}
	var verified bool = false
	this.Verified = &verified
	return &this
}

// NewAccountResponseWithDefaults instantiates a new AccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountResponseWithDefaults() *AccountResponse {
	this := AccountResponse{}
	var verified bool = false
	this.Verified = &verified
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *AccountResponse) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *AccountResponse) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *AccountResponse) SetCompany(v string) {
	o.Company = &v
}

// GetMainProductType returns the MainProductType field value if set, zero value otherwise.
func (o *AccountResponse) GetMainProductType() string {
	if o == nil || o.MainProductType == nil {
		var ret string
		return ret
	}
	return *o.MainProductType
}

// GetMainProductTypeOk returns a tuple with the MainProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetMainProductTypeOk() (*string, bool) {
	if o == nil || o.MainProductType == nil {
		return nil, false
	}
	return o.MainProductType, true
}

// HasMainProductType returns a boolean if a field has been set.
func (o *AccountResponse) HasMainProductType() bool {
	if o != nil && o.MainProductType != nil {
		return true
	}

	return false
}

// SetMainProductType gets a reference to the given string and assigns it to the MainProductType field.
func (o *AccountResponse) SetMainProductType(v string) {
	o.MainProductType = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *AccountResponse) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *AccountResponse) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *AccountResponse) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *AccountResponse) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *AccountResponse) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *AccountResponse) SetVerified(v bool) {
	o.Verified = &v
}

// GetHistoryLifeTime returns the HistoryLifeTime field value if set, zero value otherwise.
func (o *AccountResponse) GetHistoryLifeTime() string {
	if o == nil || o.HistoryLifeTime == nil {
		var ret string
		return ret
	}
	return *o.HistoryLifeTime
}

// GetHistoryLifeTimeOk returns a tuple with the HistoryLifeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetHistoryLifeTimeOk() (*string, bool) {
	if o == nil || o.HistoryLifeTime == nil {
		return nil, false
	}
	return o.HistoryLifeTime, true
}

// HasHistoryLifeTime returns a boolean if a field has been set.
func (o *AccountResponse) HasHistoryLifeTime() bool {
	if o != nil && o.HistoryLifeTime != nil {
		return true
	}

	return false
}

// SetHistoryLifeTime gets a reference to the given string and assigns it to the HistoryLifeTime field.
func (o *AccountResponse) SetHistoryLifeTime(v string) {
	o.HistoryLifeTime = &v
}

func (o AccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.MainProductType != nil {
		toSerialize["mainProductType"] = o.MainProductType
	}
	if o.LogoUrl != nil {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if o.HistoryLifeTime != nil {
		toSerialize["historyLifeTime"] = o.HistoryLifeTime
	}
	return json.Marshal(toSerialize)
}

type NullableAccountResponse struct {
	value *AccountResponse
	isSet bool
}

func (v NullableAccountResponse) Get() *AccountResponse {
	return v.value
}

func (v *NullableAccountResponse) Set(val *AccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountResponse(val *AccountResponse) *NullableAccountResponse {
	return &NullableAccountResponse{value: val, isSet: true}
}

func (v NullableAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


