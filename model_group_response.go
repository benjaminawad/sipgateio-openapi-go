/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupResponse struct for GroupResponse
type GroupResponse struct {
	Id *string `json:"id,omitempty"`
	Alias *string `json:"alias,omitempty"`
	DepartmentId *int64 `json:"departmentId,omitempty"`
	Voicemails []VoicemailSettingsResponse `json:"voicemails,omitempty"`
}

// NewGroupResponse instantiates a new GroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupResponse() *GroupResponse {
	this := GroupResponse{}
	return &this
}

// NewGroupResponseWithDefaults instantiates a new GroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupResponseWithDefaults() *GroupResponse {
	this := GroupResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GroupResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GroupResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GroupResponse) SetId(v string) {
	o.Id = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *GroupResponse) GetAlias() string {
	if o == nil || o.Alias == nil {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResponse) GetAliasOk() (*string, bool) {
	if o == nil || o.Alias == nil {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *GroupResponse) HasAlias() bool {
	if o != nil && o.Alias != nil {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *GroupResponse) SetAlias(v string) {
	o.Alias = &v
}

// GetDepartmentId returns the DepartmentId field value if set, zero value otherwise.
func (o *GroupResponse) GetDepartmentId() int64 {
	if o == nil || o.DepartmentId == nil {
		var ret int64
		return ret
	}
	return *o.DepartmentId
}

// GetDepartmentIdOk returns a tuple with the DepartmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResponse) GetDepartmentIdOk() (*int64, bool) {
	if o == nil || o.DepartmentId == nil {
		return nil, false
	}
	return o.DepartmentId, true
}

// HasDepartmentId returns a boolean if a field has been set.
func (o *GroupResponse) HasDepartmentId() bool {
	if o != nil && o.DepartmentId != nil {
		return true
	}

	return false
}

// SetDepartmentId gets a reference to the given int64 and assigns it to the DepartmentId field.
func (o *GroupResponse) SetDepartmentId(v int64) {
	o.DepartmentId = &v
}

// GetVoicemails returns the Voicemails field value if set, zero value otherwise.
func (o *GroupResponse) GetVoicemails() []VoicemailSettingsResponse {
	if o == nil || o.Voicemails == nil {
		var ret []VoicemailSettingsResponse
		return ret
	}
	return o.Voicemails
}

// GetVoicemailsOk returns a tuple with the Voicemails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResponse) GetVoicemailsOk() ([]VoicemailSettingsResponse, bool) {
	if o == nil || o.Voicemails == nil {
		return nil, false
	}
	return o.Voicemails, true
}

// HasVoicemails returns a boolean if a field has been set.
func (o *GroupResponse) HasVoicemails() bool {
	if o != nil && o.Voicemails != nil {
		return true
	}

	return false
}

// SetVoicemails gets a reference to the given []VoicemailSettingsResponse and assigns it to the Voicemails field.
func (o *GroupResponse) SetVoicemails(v []VoicemailSettingsResponse) {
	o.Voicemails = v
}

func (o GroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Alias != nil {
		toSerialize["alias"] = o.Alias
	}
	if o.DepartmentId != nil {
		toSerialize["departmentId"] = o.DepartmentId
	}
	if o.Voicemails != nil {
		toSerialize["voicemails"] = o.Voicemails
	}
	return json.Marshal(toSerialize)
}

type NullableGroupResponse struct {
	value *GroupResponse
	isSet bool
}

func (v NullableGroupResponse) Get() *GroupResponse {
	return v.value
}

func (v *NullableGroupResponse) Set(val *GroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupResponse(val *GroupResponse) *NullableGroupResponse {
	return &NullableGroupResponse{value: val, isSet: true}
}

func (v NullableGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


