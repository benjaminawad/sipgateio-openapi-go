/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddGreetingRequest struct for AddGreetingRequest
type AddGreetingRequest struct {
	Filename *string `json:"filename,omitempty"`
	Base64Content *string `json:"base64Content,omitempty"`
}

// NewAddGreetingRequest instantiates a new AddGreetingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddGreetingRequest() *AddGreetingRequest {
	this := AddGreetingRequest{}
	return &this
}

// NewAddGreetingRequestWithDefaults instantiates a new AddGreetingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddGreetingRequestWithDefaults() *AddGreetingRequest {
	this := AddGreetingRequest{}
	return &this
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *AddGreetingRequest) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGreetingRequest) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *AddGreetingRequest) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *AddGreetingRequest) SetFilename(v string) {
	o.Filename = &v
}

// GetBase64Content returns the Base64Content field value if set, zero value otherwise.
func (o *AddGreetingRequest) GetBase64Content() string {
	if o == nil || o.Base64Content == nil {
		var ret string
		return ret
	}
	return *o.Base64Content
}

// GetBase64ContentOk returns a tuple with the Base64Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGreetingRequest) GetBase64ContentOk() (*string, bool) {
	if o == nil || o.Base64Content == nil {
		return nil, false
	}
	return o.Base64Content, true
}

// HasBase64Content returns a boolean if a field has been set.
func (o *AddGreetingRequest) HasBase64Content() bool {
	if o != nil && o.Base64Content != nil {
		return true
	}

	return false
}

// SetBase64Content gets a reference to the given string and assigns it to the Base64Content field.
func (o *AddGreetingRequest) SetBase64Content(v string) {
	o.Base64Content = &v
}

func (o AddGreetingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Base64Content != nil {
		toSerialize["base64Content"] = o.Base64Content
	}
	return json.Marshal(toSerialize)
}

type NullableAddGreetingRequest struct {
	value *AddGreetingRequest
	isSet bool
}

func (v NullableAddGreetingRequest) Get() *AddGreetingRequest {
	return v.value
}

func (v *NullableAddGreetingRequest) Set(val *AddGreetingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddGreetingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddGreetingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddGreetingRequest(val *AddGreetingRequest) *NullableAddGreetingRequest {
	return &NullableAddGreetingRequest{value: val, isSet: true}
}

func (v NullableAddGreetingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddGreetingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


