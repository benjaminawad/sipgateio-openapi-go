/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NewIvrRecordingRequest struct for NewIvrRecordingRequest
type NewIvrRecordingRequest struct {
	DeviceId *string `json:"deviceId,omitempty"`
	TargetId *string `json:"targetId,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
}

// NewNewIvrRecordingRequest instantiates a new NewIvrRecordingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewIvrRecordingRequest() *NewIvrRecordingRequest {
	this := NewIvrRecordingRequest{}
	return &this
}

// NewNewIvrRecordingRequestWithDefaults instantiates a new NewIvrRecordingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewIvrRecordingRequestWithDefaults() *NewIvrRecordingRequest {
	this := NewIvrRecordingRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *NewIvrRecordingRequest) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewIvrRecordingRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *NewIvrRecordingRequest) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *NewIvrRecordingRequest) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *NewIvrRecordingRequest) GetTargetId() string {
	if o == nil || o.TargetId == nil {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewIvrRecordingRequest) GetTargetIdOk() (*string, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *NewIvrRecordingRequest) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *NewIvrRecordingRequest) SetTargetId(v string) {
	o.TargetId = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *NewIvrRecordingRequest) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NewIvrRecordingRequest) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *NewIvrRecordingRequest) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *NewIvrRecordingRequest) SetEndpoint(v string) {
	o.Endpoint = &v
}

func (o NewIvrRecordingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.TargetId != nil {
		toSerialize["targetId"] = o.TargetId
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	return json.Marshal(toSerialize)
}

type NullableNewIvrRecordingRequest struct {
	value *NewIvrRecordingRequest
	isSet bool
}

func (v NullableNewIvrRecordingRequest) Get() *NewIvrRecordingRequest {
	return v.value
}

func (v *NullableNewIvrRecordingRequest) Set(val *NewIvrRecordingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNewIvrRecordingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNewIvrRecordingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewIvrRecordingRequest(val *NewIvrRecordingRequest) *NullableNewIvrRecordingRequest {
	return &NullableNewIvrRecordingRequest{value: val, isSet: true}
}

func (v NullableNewIvrRecordingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewIvrRecordingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


