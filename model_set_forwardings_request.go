/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SetForwardingsRequest struct for SetForwardingsRequest
type SetForwardingsRequest struct {
	Forwardings []Forwarding `json:"forwardings,omitempty"`
}

// NewSetForwardingsRequest instantiates a new SetForwardingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetForwardingsRequest() *SetForwardingsRequest {
	this := SetForwardingsRequest{}
	return &this
}

// NewSetForwardingsRequestWithDefaults instantiates a new SetForwardingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetForwardingsRequestWithDefaults() *SetForwardingsRequest {
	this := SetForwardingsRequest{}
	return &this
}

// GetForwardings returns the Forwardings field value if set, zero value otherwise.
func (o *SetForwardingsRequest) GetForwardings() []Forwarding {
	if o == nil || o.Forwardings == nil {
		var ret []Forwarding
		return ret
	}
	return o.Forwardings
}

// GetForwardingsOk returns a tuple with the Forwardings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetForwardingsRequest) GetForwardingsOk() ([]Forwarding, bool) {
	if o == nil || o.Forwardings == nil {
		return nil, false
	}
	return o.Forwardings, true
}

// HasForwardings returns a boolean if a field has been set.
func (o *SetForwardingsRequest) HasForwardings() bool {
	if o != nil && o.Forwardings != nil {
		return true
	}

	return false
}

// SetForwardings gets a reference to the given []Forwarding and assigns it to the Forwardings field.
func (o *SetForwardingsRequest) SetForwardings(v []Forwarding) {
	o.Forwardings = v
}

func (o SetForwardingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Forwardings != nil {
		toSerialize["forwardings"] = o.Forwardings
	}
	return json.Marshal(toSerialize)
}

type NullableSetForwardingsRequest struct {
	value *SetForwardingsRequest
	isSet bool
}

func (v NullableSetForwardingsRequest) Get() *SetForwardingsRequest {
	return v.value
}

func (v *NullableSetForwardingsRequest) Set(val *SetForwardingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetForwardingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetForwardingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetForwardingsRequest(val *SetForwardingsRequest) *NullableSetForwardingsRequest {
	return &NullableSetForwardingsRequest{value: val, isSet: true}
}

func (v NullableSetForwardingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetForwardingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


