/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CallEmailTarget struct for CallEmailTarget
type CallEmailTarget struct {
	Id *string `json:"id,omitempty"`
	Email *string `json:"email,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Cause *string `json:"cause,omitempty"`
}

// NewCallEmailTarget instantiates a new CallEmailTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallEmailTarget() *CallEmailTarget {
	this := CallEmailTarget{}
	return &this
}

// NewCallEmailTargetWithDefaults instantiates a new CallEmailTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallEmailTargetWithDefaults() *CallEmailTarget {
	this := CallEmailTarget{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CallEmailTarget) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallEmailTarget) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CallEmailTarget) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CallEmailTarget) SetId(v string) {
	o.Id = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CallEmailTarget) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallEmailTarget) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CallEmailTarget) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CallEmailTarget) SetEmail(v string) {
	o.Email = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *CallEmailTarget) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallEmailTarget) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *CallEmailTarget) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *CallEmailTarget) SetDirection(v string) {
	o.Direction = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *CallEmailTarget) GetCause() string {
	if o == nil || o.Cause == nil {
		var ret string
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallEmailTarget) GetCauseOk() (*string, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *CallEmailTarget) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given string and assigns it to the Cause field.
func (o *CallEmailTarget) SetCause(v string) {
	o.Cause = &v
}

func (o CallEmailTarget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	return json.Marshal(toSerialize)
}

type NullableCallEmailTarget struct {
	value *CallEmailTarget
	isSet bool
}

func (v NullableCallEmailTarget) Get() *CallEmailTarget {
	return v.value
}

func (v *NullableCallEmailTarget) Set(val *CallEmailTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableCallEmailTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableCallEmailTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallEmailTarget(val *CallEmailTarget) *NullableCallEmailTarget {
	return &NullableCallEmailTarget{value: val, isSet: true}
}

func (v NullableCallEmailTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallEmailTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


