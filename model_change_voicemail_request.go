/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChangeVoicemailRequest struct for ChangeVoicemailRequest
type ChangeVoicemailRequest struct {
	Timeout *int32 `json:"timeout,omitempty"`
	Active bool `json:"active"`
	Transcription bool `json:"transcription"`
}

// NewChangeVoicemailRequest instantiates a new ChangeVoicemailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeVoicemailRequest(active bool, transcription bool) *ChangeVoicemailRequest {
	this := ChangeVoicemailRequest{}
	this.Active = active
	this.Transcription = transcription
	return &this
}

// NewChangeVoicemailRequestWithDefaults instantiates a new ChangeVoicemailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeVoicemailRequestWithDefaults() *ChangeVoicemailRequest {
	this := ChangeVoicemailRequest{}
	var active bool = false
	this.Active = active
	var transcription bool = false
	this.Transcription = transcription
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ChangeVoicemailRequest) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeVoicemailRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ChangeVoicemailRequest) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *ChangeVoicemailRequest) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetActive returns the Active field value
func (o *ChangeVoicemailRequest) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ChangeVoicemailRequest) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *ChangeVoicemailRequest) SetActive(v bool) {
	o.Active = v
}

// GetTranscription returns the Transcription field value
func (o *ChangeVoicemailRequest) GetTranscription() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Transcription
}

// GetTranscriptionOk returns a tuple with the Transcription field value
// and a boolean to check if the value has been set.
func (o *ChangeVoicemailRequest) GetTranscriptionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transcription, true
}

// SetTranscription sets field value
func (o *ChangeVoicemailRequest) SetTranscription(v bool) {
	o.Transcription = v
}

func (o ChangeVoicemailRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if true {
		toSerialize["active"] = o.Active
	}
	if true {
		toSerialize["transcription"] = o.Transcription
	}
	return json.Marshal(toSerialize)
}

type NullableChangeVoicemailRequest struct {
	value *ChangeVoicemailRequest
	isSet bool
}

func (v NullableChangeVoicemailRequest) Get() *ChangeVoicemailRequest {
	return v.value
}

func (v *NullableChangeVoicemailRequest) Set(val *ChangeVoicemailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeVoicemailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeVoicemailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeVoicemailRequest(val *ChangeVoicemailRequest) *NullableChangeVoicemailRequest {
	return &NullableChangeVoicemailRequest{value: val, isSet: true}
}

func (v NullableChangeVoicemailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeVoicemailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


