/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BooleanRequest struct for BooleanRequest
type BooleanRequest struct {
	// true or false
	Value bool `json:"value"`
}

// NewBooleanRequest instantiates a new BooleanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooleanRequest(value bool) *BooleanRequest {
	this := BooleanRequest{}
	this.Value = value
	return &this
}

// NewBooleanRequestWithDefaults instantiates a new BooleanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooleanRequestWithDefaults() *BooleanRequest {
	this := BooleanRequest{}
	return &this
}

// GetValue returns the Value field value
func (o *BooleanRequest) GetValue() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *BooleanRequest) GetValueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *BooleanRequest) SetValue(v bool) {
	o.Value = v
}

func (o BooleanRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableBooleanRequest struct {
	value *BooleanRequest
	isSet bool
}

func (v NullableBooleanRequest) Get() *BooleanRequest {
	return v.value
}

func (v *NullableBooleanRequest) Set(val *BooleanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBooleanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBooleanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooleanRequest(val *BooleanRequest) *NullableBooleanRequest {
	return &NullableBooleanRequest{value: val, isSet: true}
}

func (v NullableBooleanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooleanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


