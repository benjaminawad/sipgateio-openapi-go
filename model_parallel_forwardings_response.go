/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ParallelForwardingsResponse struct for ParallelForwardingsResponse
type ParallelForwardingsResponse struct {
	Items []ParallelForwardingResponse `json:"items,omitempty"`
}

// NewParallelForwardingsResponse instantiates a new ParallelForwardingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParallelForwardingsResponse() *ParallelForwardingsResponse {
	this := ParallelForwardingsResponse{}
	return &this
}

// NewParallelForwardingsResponseWithDefaults instantiates a new ParallelForwardingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParallelForwardingsResponseWithDefaults() *ParallelForwardingsResponse {
	this := ParallelForwardingsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ParallelForwardingsResponse) GetItems() []ParallelForwardingResponse {
	if o == nil || o.Items == nil {
		var ret []ParallelForwardingResponse
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParallelForwardingsResponse) GetItemsOk() ([]ParallelForwardingResponse, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ParallelForwardingsResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ParallelForwardingResponse and assigns it to the Items field.
func (o *ParallelForwardingsResponse) SetItems(v []ParallelForwardingResponse) {
	o.Items = v
}

func (o ParallelForwardingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableParallelForwardingsResponse struct {
	value *ParallelForwardingsResponse
	isSet bool
}

func (v NullableParallelForwardingsResponse) Get() *ParallelForwardingsResponse {
	return v.value
}

func (v *NullableParallelForwardingsResponse) Set(val *ParallelForwardingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableParallelForwardingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableParallelForwardingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParallelForwardingsResponse(val *ParallelForwardingsResponse) *NullableParallelForwardingsResponse {
	return &NullableParallelForwardingsResponse{value: val, isSet: true}
}

func (v NullableParallelForwardingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParallelForwardingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


