/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SendWebSmsRequest struct for SendWebSmsRequest
type SendWebSmsRequest struct {
	SmsId string `json:"smsId"`
	Recipient string `json:"recipient"`
	Message string `json:"message"`
	SendAt *int64 `json:"sendAt,omitempty"`
}

// NewSendWebSmsRequest instantiates a new SendWebSmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendWebSmsRequest(smsId string, recipient string, message string) *SendWebSmsRequest {
	this := SendWebSmsRequest{}
	this.SmsId = smsId
	this.Recipient = recipient
	this.Message = message
	return &this
}

// NewSendWebSmsRequestWithDefaults instantiates a new SendWebSmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendWebSmsRequestWithDefaults() *SendWebSmsRequest {
	this := SendWebSmsRequest{}
	return &this
}

// GetSmsId returns the SmsId field value
func (o *SendWebSmsRequest) GetSmsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SmsId
}

// GetSmsIdOk returns a tuple with the SmsId field value
// and a boolean to check if the value has been set.
func (o *SendWebSmsRequest) GetSmsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmsId, true
}

// SetSmsId sets field value
func (o *SendWebSmsRequest) SetSmsId(v string) {
	o.SmsId = v
}

// GetRecipient returns the Recipient field value
func (o *SendWebSmsRequest) GetRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *SendWebSmsRequest) GetRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *SendWebSmsRequest) SetRecipient(v string) {
	o.Recipient = v
}

// GetMessage returns the Message field value
func (o *SendWebSmsRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SendWebSmsRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SendWebSmsRequest) SetMessage(v string) {
	o.Message = v
}

// GetSendAt returns the SendAt field value if set, zero value otherwise.
func (o *SendWebSmsRequest) GetSendAt() int64 {
	if o == nil || o.SendAt == nil {
		var ret int64
		return ret
	}
	return *o.SendAt
}

// GetSendAtOk returns a tuple with the SendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendWebSmsRequest) GetSendAtOk() (*int64, bool) {
	if o == nil || o.SendAt == nil {
		return nil, false
	}
	return o.SendAt, true
}

// HasSendAt returns a boolean if a field has been set.
func (o *SendWebSmsRequest) HasSendAt() bool {
	if o != nil && o.SendAt != nil {
		return true
	}

	return false
}

// SetSendAt gets a reference to the given int64 and assigns it to the SendAt field.
func (o *SendWebSmsRequest) SetSendAt(v int64) {
	o.SendAt = &v
}

func (o SendWebSmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["smsId"] = o.SmsId
	}
	if true {
		toSerialize["recipient"] = o.Recipient
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.SendAt != nil {
		toSerialize["sendAt"] = o.SendAt
	}
	return json.Marshal(toSerialize)
}

type NullableSendWebSmsRequest struct {
	value *SendWebSmsRequest
	isSet bool
}

func (v NullableSendWebSmsRequest) Get() *SendWebSmsRequest {
	return v.value
}

func (v *NullableSendWebSmsRequest) Set(val *SendWebSmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendWebSmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendWebSmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendWebSmsRequest(val *SendWebSmsRequest) *NullableSendWebSmsRequest {
	return &NullableSendWebSmsRequest{value: val, isSet: true}
}

func (v NullableSendWebSmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendWebSmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


