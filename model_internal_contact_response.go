/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InternalContactResponse struct for InternalContactResponse
type InternalContactResponse struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Emails []string `json:"emails,omitempty"`
	Mobile []string `json:"mobile,omitempty"`
	Landline []string `json:"landline,omitempty"`
	Fax []string `json:"fax,omitempty"`
	Directdial []string `json:"directdial,omitempty"`
}

// NewInternalContactResponse instantiates a new InternalContactResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalContactResponse() *InternalContactResponse {
	this := InternalContactResponse{}
	return &this
}

// NewInternalContactResponseWithDefaults instantiates a new InternalContactResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalContactResponseWithDefaults() *InternalContactResponse {
	this := InternalContactResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InternalContactResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InternalContactResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InternalContactResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InternalContactResponse) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InternalContactResponse) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InternalContactResponse) SetName(v string) {
	o.Name = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *InternalContactResponse) GetEmails() []string {
	if o == nil || o.Emails == nil {
		var ret []string
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetEmailsOk() ([]string, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *InternalContactResponse) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []string and assigns it to the Emails field.
func (o *InternalContactResponse) SetEmails(v []string) {
	o.Emails = v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *InternalContactResponse) GetMobile() []string {
	if o == nil || o.Mobile == nil {
		var ret []string
		return ret
	}
	return o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetMobileOk() ([]string, bool) {
	if o == nil || o.Mobile == nil {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *InternalContactResponse) HasMobile() bool {
	if o != nil && o.Mobile != nil {
		return true
	}

	return false
}

// SetMobile gets a reference to the given []string and assigns it to the Mobile field.
func (o *InternalContactResponse) SetMobile(v []string) {
	o.Mobile = v
}

// GetLandline returns the Landline field value if set, zero value otherwise.
func (o *InternalContactResponse) GetLandline() []string {
	if o == nil || o.Landline == nil {
		var ret []string
		return ret
	}
	return o.Landline
}

// GetLandlineOk returns a tuple with the Landline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetLandlineOk() ([]string, bool) {
	if o == nil || o.Landline == nil {
		return nil, false
	}
	return o.Landline, true
}

// HasLandline returns a boolean if a field has been set.
func (o *InternalContactResponse) HasLandline() bool {
	if o != nil && o.Landline != nil {
		return true
	}

	return false
}

// SetLandline gets a reference to the given []string and assigns it to the Landline field.
func (o *InternalContactResponse) SetLandline(v []string) {
	o.Landline = v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *InternalContactResponse) GetFax() []string {
	if o == nil || o.Fax == nil {
		var ret []string
		return ret
	}
	return o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetFaxOk() ([]string, bool) {
	if o == nil || o.Fax == nil {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *InternalContactResponse) HasFax() bool {
	if o != nil && o.Fax != nil {
		return true
	}

	return false
}

// SetFax gets a reference to the given []string and assigns it to the Fax field.
func (o *InternalContactResponse) SetFax(v []string) {
	o.Fax = v
}

// GetDirectdial returns the Directdial field value if set, zero value otherwise.
func (o *InternalContactResponse) GetDirectdial() []string {
	if o == nil || o.Directdial == nil {
		var ret []string
		return ret
	}
	return o.Directdial
}

// GetDirectdialOk returns a tuple with the Directdial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalContactResponse) GetDirectdialOk() ([]string, bool) {
	if o == nil || o.Directdial == nil {
		return nil, false
	}
	return o.Directdial, true
}

// HasDirectdial returns a boolean if a field has been set.
func (o *InternalContactResponse) HasDirectdial() bool {
	if o != nil && o.Directdial != nil {
		return true
	}

	return false
}

// SetDirectdial gets a reference to the given []string and assigns it to the Directdial field.
func (o *InternalContactResponse) SetDirectdial(v []string) {
	o.Directdial = v
}

func (o InternalContactResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if o.Mobile != nil {
		toSerialize["mobile"] = o.Mobile
	}
	if o.Landline != nil {
		toSerialize["landline"] = o.Landline
	}
	if o.Fax != nil {
		toSerialize["fax"] = o.Fax
	}
	if o.Directdial != nil {
		toSerialize["directdial"] = o.Directdial
	}
	return json.Marshal(toSerialize)
}

type NullableInternalContactResponse struct {
	value *InternalContactResponse
	isSet bool
}

func (v NullableInternalContactResponse) Get() *InternalContactResponse {
	return v.value
}

func (v *NullableInternalContactResponse) Set(val *InternalContactResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalContactResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalContactResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalContactResponse(val *InternalContactResponse) *NullableInternalContactResponse {
	return &NullableInternalContactResponse{value: val, isSet: true}
}

func (v NullableInternalContactResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalContactResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


