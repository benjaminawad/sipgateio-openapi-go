/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OAuthClients struct for OAuthClients
type OAuthClients struct {
	Data []OAuthClient `json:"data,omitempty"`
}

// NewOAuthClients instantiates a new OAuthClients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthClients() *OAuthClients {
	this := OAuthClients{}
	return &this
}

// NewOAuthClientsWithDefaults instantiates a new OAuthClients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthClientsWithDefaults() *OAuthClients {
	this := OAuthClients{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OAuthClients) GetData() []OAuthClient {
	if o == nil || o.Data == nil {
		var ret []OAuthClient
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClients) GetDataOk() ([]OAuthClient, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OAuthClients) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []OAuthClient and assigns it to the Data field.
func (o *OAuthClients) SetData(v []OAuthClient) {
	o.Data = v
}

func (o OAuthClients) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableOAuthClients struct {
	value *OAuthClients
	isSet bool
}

func (v NullableOAuthClients) Get() *OAuthClients {
	return v.value
}

func (v *NullableOAuthClients) Set(val *OAuthClients) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthClients) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthClients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthClients(val *OAuthClients) *NullableOAuthClients {
	return &NullableOAuthClients{value: val, isSet: true}
}

func (v NullableOAuthClients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthClients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


