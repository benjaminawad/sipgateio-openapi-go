/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CallNotificationResponse struct for CallNotificationResponse
type CallNotificationResponse struct {
	EndpointId *string `json:"endpointId,omitempty"`
	EndpointAlias *string `json:"endpointAlias,omitempty"`
	Emails []CallEmailTarget `json:"emails,omitempty"`
	Sms []CallSmsTarget `json:"sms,omitempty"`
}

// NewCallNotificationResponse instantiates a new CallNotificationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallNotificationResponse() *CallNotificationResponse {
	this := CallNotificationResponse{}
	return &this
}

// NewCallNotificationResponseWithDefaults instantiates a new CallNotificationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallNotificationResponseWithDefaults() *CallNotificationResponse {
	this := CallNotificationResponse{}
	return &this
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *CallNotificationResponse) GetEndpointId() string {
	if o == nil || o.EndpointId == nil {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallNotificationResponse) GetEndpointIdOk() (*string, bool) {
	if o == nil || o.EndpointId == nil {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *CallNotificationResponse) HasEndpointId() bool {
	if o != nil && o.EndpointId != nil {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *CallNotificationResponse) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetEndpointAlias returns the EndpointAlias field value if set, zero value otherwise.
func (o *CallNotificationResponse) GetEndpointAlias() string {
	if o == nil || o.EndpointAlias == nil {
		var ret string
		return ret
	}
	return *o.EndpointAlias
}

// GetEndpointAliasOk returns a tuple with the EndpointAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallNotificationResponse) GetEndpointAliasOk() (*string, bool) {
	if o == nil || o.EndpointAlias == nil {
		return nil, false
	}
	return o.EndpointAlias, true
}

// HasEndpointAlias returns a boolean if a field has been set.
func (o *CallNotificationResponse) HasEndpointAlias() bool {
	if o != nil && o.EndpointAlias != nil {
		return true
	}

	return false
}

// SetEndpointAlias gets a reference to the given string and assigns it to the EndpointAlias field.
func (o *CallNotificationResponse) SetEndpointAlias(v string) {
	o.EndpointAlias = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *CallNotificationResponse) GetEmails() []CallEmailTarget {
	if o == nil || o.Emails == nil {
		var ret []CallEmailTarget
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallNotificationResponse) GetEmailsOk() ([]CallEmailTarget, bool) {
	if o == nil || o.Emails == nil {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *CallNotificationResponse) HasEmails() bool {
	if o != nil && o.Emails != nil {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []CallEmailTarget and assigns it to the Emails field.
func (o *CallNotificationResponse) SetEmails(v []CallEmailTarget) {
	o.Emails = v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *CallNotificationResponse) GetSms() []CallSmsTarget {
	if o == nil || o.Sms == nil {
		var ret []CallSmsTarget
		return ret
	}
	return o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallNotificationResponse) GetSmsOk() ([]CallSmsTarget, bool) {
	if o == nil || o.Sms == nil {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *CallNotificationResponse) HasSms() bool {
	if o != nil && o.Sms != nil {
		return true
	}

	return false
}

// SetSms gets a reference to the given []CallSmsTarget and assigns it to the Sms field.
func (o *CallNotificationResponse) SetSms(v []CallSmsTarget) {
	o.Sms = v
}

func (o CallNotificationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndpointId != nil {
		toSerialize["endpointId"] = o.EndpointId
	}
	if o.EndpointAlias != nil {
		toSerialize["endpointAlias"] = o.EndpointAlias
	}
	if o.Emails != nil {
		toSerialize["emails"] = o.Emails
	}
	if o.Sms != nil {
		toSerialize["sms"] = o.Sms
	}
	return json.Marshal(toSerialize)
}

type NullableCallNotificationResponse struct {
	value *CallNotificationResponse
	isSet bool
}

func (v NullableCallNotificationResponse) Get() *CallNotificationResponse {
	return v.value
}

func (v *NullableCallNotificationResponse) Set(val *CallNotificationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallNotificationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallNotificationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallNotificationResponse(val *CallNotificationResponse) *NullableCallNotificationResponse {
	return &NullableCallNotificationResponse{value: val, isSet: true}
}

func (v NullableCallNotificationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallNotificationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


