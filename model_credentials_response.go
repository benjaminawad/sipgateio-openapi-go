/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CredentialsResponse struct for CredentialsResponse
type CredentialsResponse struct {
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	SipServer *string `json:"sipServer,omitempty"`
	OutboundProxy *string `json:"outboundProxy,omitempty"`
	SipServerWebsocketUrl *string `json:"sipServerWebsocketUrl,omitempty"`
}

// NewCredentialsResponse instantiates a new CredentialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsResponse() *CredentialsResponse {
	this := CredentialsResponse{}
	return &this
}

// NewCredentialsResponseWithDefaults instantiates a new CredentialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsResponseWithDefaults() *CredentialsResponse {
	this := CredentialsResponse{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CredentialsResponse) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CredentialsResponse) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CredentialsResponse) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CredentialsResponse) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CredentialsResponse) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CredentialsResponse) SetPassword(v string) {
	o.Password = &v
}

// GetSipServer returns the SipServer field value if set, zero value otherwise.
func (o *CredentialsResponse) GetSipServer() string {
	if o == nil || o.SipServer == nil {
		var ret string
		return ret
	}
	return *o.SipServer
}

// GetSipServerOk returns a tuple with the SipServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetSipServerOk() (*string, bool) {
	if o == nil || o.SipServer == nil {
		return nil, false
	}
	return o.SipServer, true
}

// HasSipServer returns a boolean if a field has been set.
func (o *CredentialsResponse) HasSipServer() bool {
	if o != nil && o.SipServer != nil {
		return true
	}

	return false
}

// SetSipServer gets a reference to the given string and assigns it to the SipServer field.
func (o *CredentialsResponse) SetSipServer(v string) {
	o.SipServer = &v
}

// GetOutboundProxy returns the OutboundProxy field value if set, zero value otherwise.
func (o *CredentialsResponse) GetOutboundProxy() string {
	if o == nil || o.OutboundProxy == nil {
		var ret string
		return ret
	}
	return *o.OutboundProxy
}

// GetOutboundProxyOk returns a tuple with the OutboundProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetOutboundProxyOk() (*string, bool) {
	if o == nil || o.OutboundProxy == nil {
		return nil, false
	}
	return o.OutboundProxy, true
}

// HasOutboundProxy returns a boolean if a field has been set.
func (o *CredentialsResponse) HasOutboundProxy() bool {
	if o != nil && o.OutboundProxy != nil {
		return true
	}

	return false
}

// SetOutboundProxy gets a reference to the given string and assigns it to the OutboundProxy field.
func (o *CredentialsResponse) SetOutboundProxy(v string) {
	o.OutboundProxy = &v
}

// GetSipServerWebsocketUrl returns the SipServerWebsocketUrl field value if set, zero value otherwise.
func (o *CredentialsResponse) GetSipServerWebsocketUrl() string {
	if o == nil || o.SipServerWebsocketUrl == nil {
		var ret string
		return ret
	}
	return *o.SipServerWebsocketUrl
}

// GetSipServerWebsocketUrlOk returns a tuple with the SipServerWebsocketUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsResponse) GetSipServerWebsocketUrlOk() (*string, bool) {
	if o == nil || o.SipServerWebsocketUrl == nil {
		return nil, false
	}
	return o.SipServerWebsocketUrl, true
}

// HasSipServerWebsocketUrl returns a boolean if a field has been set.
func (o *CredentialsResponse) HasSipServerWebsocketUrl() bool {
	if o != nil && o.SipServerWebsocketUrl != nil {
		return true
	}

	return false
}

// SetSipServerWebsocketUrl gets a reference to the given string and assigns it to the SipServerWebsocketUrl field.
func (o *CredentialsResponse) SetSipServerWebsocketUrl(v string) {
	o.SipServerWebsocketUrl = &v
}

func (o CredentialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.SipServer != nil {
		toSerialize["sipServer"] = o.SipServer
	}
	if o.OutboundProxy != nil {
		toSerialize["outboundProxy"] = o.OutboundProxy
	}
	if o.SipServerWebsocketUrl != nil {
		toSerialize["sipServerWebsocketUrl"] = o.SipServerWebsocketUrl
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialsResponse struct {
	value *CredentialsResponse
	isSet bool
}

func (v NullableCredentialsResponse) Get() *CredentialsResponse {
	return v.value
}

func (v *NullableCredentialsResponse) Set(val *CredentialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsResponse(val *CredentialsResponse) *NullableCredentialsResponse {
	return &NullableCredentialsResponse{value: val, isSet: true}
}

func (v NullableCredentialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


