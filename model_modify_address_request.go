/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModifyAddressRequest struct for ModifyAddressRequest
type ModifyAddressRequest struct {
	Countrycode string `json:"countrycode"`
	State *string `json:"state,omitempty"`
	Postcode string `json:"postcode"`
	City string `json:"city"`
	Street *string `json:"street,omitempty"`
	Number *string `json:"number,omitempty"`
	Address1 *string `json:"address1,omitempty"`
	Address2 *string `json:"address2,omitempty"`
}

// NewModifyAddressRequest instantiates a new ModifyAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyAddressRequest(countrycode string, postcode string, city string) *ModifyAddressRequest {
	this := ModifyAddressRequest{}
	this.Countrycode = countrycode
	this.Postcode = postcode
	this.City = city
	return &this
}

// NewModifyAddressRequestWithDefaults instantiates a new ModifyAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyAddressRequestWithDefaults() *ModifyAddressRequest {
	this := ModifyAddressRequest{}
	return &this
}

// GetCountrycode returns the Countrycode field value
func (o *ModifyAddressRequest) GetCountrycode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Countrycode
}

// GetCountrycodeOk returns a tuple with the Countrycode field value
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetCountrycodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Countrycode, true
}

// SetCountrycode sets field value
func (o *ModifyAddressRequest) SetCountrycode(v string) {
	o.Countrycode = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ModifyAddressRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ModifyAddressRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ModifyAddressRequest) SetState(v string) {
	o.State = &v
}

// GetPostcode returns the Postcode field value
func (o *ModifyAddressRequest) GetPostcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Postcode
}

// GetPostcodeOk returns a tuple with the Postcode field value
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetPostcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Postcode, true
}

// SetPostcode sets field value
func (o *ModifyAddressRequest) SetPostcode(v string) {
	o.Postcode = v
}

// GetCity returns the City field value
func (o *ModifyAddressRequest) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *ModifyAddressRequest) SetCity(v string) {
	o.City = v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *ModifyAddressRequest) GetStreet() string {
	if o == nil || o.Street == nil {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetStreetOk() (*string, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *ModifyAddressRequest) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *ModifyAddressRequest) SetStreet(v string) {
	o.Street = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ModifyAddressRequest) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ModifyAddressRequest) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *ModifyAddressRequest) SetNumber(v string) {
	o.Number = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *ModifyAddressRequest) GetAddress1() string {
	if o == nil || o.Address1 == nil {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetAddress1Ok() (*string, bool) {
	if o == nil || o.Address1 == nil {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *ModifyAddressRequest) HasAddress1() bool {
	if o != nil && o.Address1 != nil {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *ModifyAddressRequest) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *ModifyAddressRequest) GetAddress2() string {
	if o == nil || o.Address2 == nil {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyAddressRequest) GetAddress2Ok() (*string, bool) {
	if o == nil || o.Address2 == nil {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *ModifyAddressRequest) HasAddress2() bool {
	if o != nil && o.Address2 != nil {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *ModifyAddressRequest) SetAddress2(v string) {
	o.Address2 = &v
}

func (o ModifyAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["countrycode"] = o.Countrycode
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["postcode"] = o.Postcode
	}
	if true {
		toSerialize["city"] = o.City
	}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Address1 != nil {
		toSerialize["address1"] = o.Address1
	}
	if o.Address2 != nil {
		toSerialize["address2"] = o.Address2
	}
	return json.Marshal(toSerialize)
}

type NullableModifyAddressRequest struct {
	value *ModifyAddressRequest
	isSet bool
}

func (v NullableModifyAddressRequest) Get() *ModifyAddressRequest {
	return v.value
}

func (v *NullableModifyAddressRequest) Set(val *ModifyAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyAddressRequest(val *ModifyAddressRequest) *NullableModifyAddressRequest {
	return &NullableModifyAddressRequest{value: val, isSet: true}
}

func (v NullableModifyAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


