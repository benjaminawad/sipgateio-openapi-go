/*
sipgate API

This is the sipgate REST API documentation. We build our applications on this API and we invite you to use it too.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IncomingEntry struct for IncomingEntry
type IncomingEntry struct {
	// The phone number
	PhoneNumber string `json:"phoneNumber"`
	// Should phone numbers be blocked beginning with given number
	IsBlock *bool `json:"isBlock,omitempty"`
}

// NewIncomingEntry instantiates a new IncomingEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomingEntry(phoneNumber string) *IncomingEntry {
	this := IncomingEntry{}
	this.PhoneNumber = phoneNumber
	var isBlock bool = false
	this.IsBlock = &isBlock
	return &this
}

// NewIncomingEntryWithDefaults instantiates a new IncomingEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomingEntryWithDefaults() *IncomingEntry {
	this := IncomingEntry{}
	var isBlock bool = false
	this.IsBlock = &isBlock
	return &this
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *IncomingEntry) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *IncomingEntry) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *IncomingEntry) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetIsBlock returns the IsBlock field value if set, zero value otherwise.
func (o *IncomingEntry) GetIsBlock() bool {
	if o == nil || o.IsBlock == nil {
		var ret bool
		return ret
	}
	return *o.IsBlock
}

// GetIsBlockOk returns a tuple with the IsBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingEntry) GetIsBlockOk() (*bool, bool) {
	if o == nil || o.IsBlock == nil {
		return nil, false
	}
	return o.IsBlock, true
}

// HasIsBlock returns a boolean if a field has been set.
func (o *IncomingEntry) HasIsBlock() bool {
	if o != nil && o.IsBlock != nil {
		return true
	}

	return false
}

// SetIsBlock gets a reference to the given bool and assigns it to the IsBlock field.
func (o *IncomingEntry) SetIsBlock(v bool) {
	o.IsBlock = &v
}

func (o IncomingEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if o.IsBlock != nil {
		toSerialize["isBlock"] = o.IsBlock
	}
	return json.Marshal(toSerialize)
}

type NullableIncomingEntry struct {
	value *IncomingEntry
	isSet bool
}

func (v NullableIncomingEntry) Get() *IncomingEntry {
	return v.value
}

func (v *NullableIncomingEntry) Set(val *IncomingEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomingEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomingEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomingEntry(val *IncomingEntry) *NullableIncomingEntry {
	return &NullableIncomingEntry{value: val, isSet: true}
}

func (v NullableIncomingEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomingEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


